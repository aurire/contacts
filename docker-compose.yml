version: "3.2"
services:
  nodec:
    environment:
      NODE_ENV: "${NODE_ENV}"
    image: nodec
    build:
      context: ./
      dockerfile: ./node/Dockerfile
    networks:
      - backend
    container_name: nodec
  phpc:
    build:
      context: './'
      dockerfile: './php/Dockerfile'
      args:
       PHP_VERSION: ${PHP_VERSION}
    networks:
      - backend
    volumes:
      - /var/www/html/phonebook.rekstys.lt/symfony/templates/
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: phpc
  apachec:
    build:
      context: './'
      dockerfile: './apache/Dockerfile'
      args:
       APACHE_VERSION: ${APACHE_VERSION}
    depends_on:
      - phpc
      - mysqlc
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - /var/www/html/phonebook.rekstys.lt/symfony/public/
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: apachec
  mysqlc:
    image: mysql:${MYSQL_VERSION:-latest}
    restart: always
    ports:
      - "3306:3306"
    volumes:
            - data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    container_name: mysqlc
networks:
  frontend:
  backend:
volumes:
    data:
